(deftheme gruvbox-material-hard "Gruvbox Material Hard Theme.")

;; (defvar gruvbox-material-hard-colors-alist
;; 	'(("gm-fg0"			. "#DDC7A1")
;; 	  ("gm-fg"			. "#D4BE98")
;; 	  ("gm-fg1"			. "#C5B18D")
;; 	  ("gm-red"			. "#EA6962")
;; 	  ("gm-orange"		. "#E78A4E")
;; 	  ("gm-yellow"		. "#D8A657")
;; 	  ("gm-green"		. "#A9B665")
;; 	  ("gm-aqua"		. "#89B482")
;; 	  ("gm-blue"		. "#7DAEA3")
;; 	  ("gm-purple"		. "#D3869B")
;; 	  ("gm-dimRed"		. "#B85651")
;; 	  ("gm-dimOrange"	. "#BD6F3E")
;; 	  ("gm-dimYellow"	. "#C18F41")
;; 	  ("gm-dimGreen"	. "#8F9A52")
;; 	  ("gm-dimAqua"		. "#72966C")
;; 	  ("gm-dimBlue"		. "#68948A")
;; 	  ("gm-dimPurple"	. "#AB6C7D")

;; 	  ("gm-bg0"			. "#070808")
;; 	  ("gm-bg1"			. "#131414")
;; 	  ("gm-bg"			. "#202020" )
;; 	  ("gm-bg2"			. "#2A2827")
;; 	  ("gm-bg3"			. "#2E2C2B")
;; 	  ("gm-bg4"			. "#32302F")
;; 	  ("gm-bg5"			. "#3D3835")
;; 	  ("gm-bg6"			. "#46403D")
;; 	  ("gm-bg7"			. "#514945")
;; 	  ("gm-bg8"			. "#5A524C")
;; 	  ("gm-bg9"			. "#665C54")
;; 	  ("gm-grey0"		. "#7C6F64")
;; 	  ("gm-grey1"		. "#928374")
;; 	  ("gm-grey2"		. "#A89984")))

(let ((gm-fg0          "#DDC7A1")
	  (gm-fg           "#D4BE98")
	  (gm-fg1          "#C5B18D")
	  (gm-red          "#EA6962")
	  (gm-orange       "#E78A4E")
	  (gm-yellow       "#D8A657")
	  (gm-green        "#A9B665")
	  (gm-aqua         "#89B482")
	  (gm-blue         "#7DAEA3")
	  (gm-purple       "#D3869B")
	  (gm-dimRed       "#B85651")
	  (gm-dimOrange    "#BD6F3E")
	  (gm-dimYellow    "#C18F41")
	  (gm-dimGreen     "#8F9A52")
	  (gm-dimAqua      "#72966C")
	  (gm-dimBlue      "#68948A")
	  (gm-dimPurple    "#AB6C7D")

	  (gm-bg0          "#070808")
	  (gm-bg1          "#131414")
	  (gm-bg           "#202020")
	  (gm-bg2          "#2A2827")
	  (gm-bg3          "#2E2C2B")
	  (gm-bg4          "#32302F")
	  (gm-bg5          "#3D3835")
	  (gm-bg6          "#46403D")
	  (gm-bg7          "#514945")
	  (gm-bg8          "#5A524C")
	  (gm-bg9          "#665C54")
	  (gm-grey0        "#7C6F64")
	  (gm-grey1        "#928374")
	  (gm-grey2        "#A89984"))

  (custom-theme-set-faces 'gruvbox-material-hard
                          '(button ((t (:box (:line-width 1 :color ,gm-yellow) ))))
                          `(default ((t (:background ,gm-bg :foreground ,gm-fg))))
                          `(cursor ((t (:background ,gm-fg :foreground ,gm-bg))))
                          `(link ((t (:underline t :foreground ,gm-blue))))
                          `(link-visited ((t (:underline t :foreground ,gm-blue))))
                          `(underline ((t (:underline t :foreground ,gm-yellow))))
                          `(font-lock-keyword-face ((t (:foreground ,gm-purple))))
                          `(font-lock-function-name-face ((t (:foreground ,gm-blue))))
                          `(font-lock-string-face ((t (:foreground ,gm-green))))
                          `(font-lock-warning-face ((t (:inverse-video t :background ,gm-bg :foreground ,gm-red))))
                          `(font-lock-type-face ((t (:foreground ,gm-aqua))))
                          `(font-lock-preprocessor-face ((t (:foreground ,gm-blue))))
                          `(font-lock-builtin-face ((t (:foreground ,gm-yellow))))
                          `(font-lock-variable-name-face ((t (:foreground ,gm-red))))
                          `(font-lock-constant-face ((t (:foreground ,gm-yellow))))
                          `(font-lock-doc-face ((t (:slant italic :foreground ,gm-fg0))))
                          `(font-lock-comment-face ((t (:slant italic :foreground ,gm-grey1))))
                          `(shadow ((t (:foreground ,gm-fg0))))
                          `(Info-quoted ((t (:inherit font-lock-constant-face))))
                          `(show-paren-match-face ((t (:inverse-video t :background ,gm-fg :foreground ,gm-red))))
                          `(highline-face ((t (:background ,gm-bg))))
                          `(ac-selection-face ((t (:background ,gm-purple :foreground ,gm-bg4))))
                          `(ac-candidate-face ((t (:background ,gm-bg :foreground ,gm-fg))))
                          `(flymake-errline
                            ((((supports :underline (:style wave)))
                              (:underline (:style wave :color ,gm-red)
                                          :inherit unspecified :foreground unspecified :background unspecified))
                             (t (:foreground ,gm-red :weight bold :underline t))))
                          `(flymake-warnline
                            ((((supports :underline (:style wave)))
                              (:underline (:style wave :color ,gm-yellow)
                                          :inherit unspecified :foreground unspecified :background unspecified))
                             (t (:foreground ,gm-yellow :weight bold :underline t))))
                          `(flymake-infoline
                            ((((supports :underline (:style wave)))
                              (:underline (:style wave :color ,gm-green)
                                          :inherit unspecified :foreground unspecified :background unspecified))
                             (t (:foreground ,gm-green :weight bold :underline t))))
                          `(flyspell-duplicate
                            ((((supports :underline (:style wave)))
                              (:underline (:style wave :color ,gm-yellow) :inherit unspecified))
                             (t (:foreground ,gm-yellow :weight bold :underline t))))
                          `(flyspell-incorrect
                            ((((supports :underline (:style wave)))
                              (:underline (:style wave :color ,gm-red) :inherit unspecified))
                             (t (:foreground ,gm-red :weight bold :underline t))))
                          `(minibuffer-prompt ((t (:foreground ,gm-yellow))))
                          `(menu ((t (:foreground ,gm-fg :background ,gm-bg))))
                          `(highlight ((t (:background ,gm-bg4))))
                          ;; `(hl-line-face ((,class (:background ,gm-bg4))
                          ;;                 (t :weight bold)))
                          ;; `(hl-line ((,class (:background ,gm-bg4 :extend t))
                          ;;            (t :weight bold)))
                          `(success ((t (:foreground ,gm-green :weight bold))))
                          `(warning ((t (:foreground ,gm-yellow :weight bold))))
                          `(error ((t  (:foreground ,gm-red))))
                          `(tooltip ((t (:foreground ,gm-fg :background ,gm-bg))))
                          `(region ((t (:background ,gm-bg4))))
                          `(secondary-selection ((t (:background ,gm-bg))))
                          `(trailing-fgspace ((t (:background ,gm-red))))
                          `(border ((t (:background ,gm-bg :foreground ,gm-fg))))
                          `(vertical-border ((t (:foreground ,gm-grey0))))
                          `(mode-line ((t (:foreground ,gm-fg0 :background ,gm-bg3 :weight normal
                                                       :box (:line-width 1 :color ,gm-bg)))))
                          `(mode-line-inactive ((t (:foreground ,gm-fg0 :background ,gm-bg :weight normal :box (:line-width 1 :color ,gm-bg)))))
                          `(mode-line-buffer-id ((t (:weight bold :background ,gm-bg :foreground ,gm-fg))))
                          `(mode-line-emphasis ((t (:foreground ,gm-fg :slant italic))))
                          `(mode-line-highlight ((t (:foreground ,gm-purple :box nil :weight bold))))
                          `(fringe ((t (:underline t :background ,gm-bg :foreground ,gm-bg4))))
                          ;; `(fill-column-indicator ((,class :foreground ,gm-bg4 :weight semilight)))
                          `(linum ((t (:background ,gm-bg :foreground ,gm-fg))))
                          `(line-number ((t (:foreground ,gm-bg9
                                                         (list :background ,gm-bg)))))
                          `(line-number-current-line ((t (:inherit line-number :foreground ,gm-fg
                                                                   (list :background ,gm-bg4)))))
                          `(header-line ((t (:foreground ,gm-yellow
                                                         :background ,gm-bg
                                                         :box (:line-width -1 :style released-button)
                                                         :extend t))))
                          `(widget-field ((t (:foreground ,gm-fg :background ,gm-bg3
														  :box (:line-width -1 :color ,gm-grey0)))))
                          ;; `(widget-button ((t (:underline t))))
                          `(escape-glyph ((t (:foreground ,gm-yellow :weight bold))))
                          `(dired-directory ((t (:weight bold :foreground ,gm-blue))))
                          `(lazy-highlight ((t (:foreground ,gm-blue :background ,gm-bg :inverse-video t))))
                          `(isearch ((t (:inverse-video t :background ,gm-bg4 :foreground ,gm-blue))))
                          `(isearch-fail ((t (:background ,gm-bg :inherit font-lock-warning-face :inverse-video t))))
                          `(isearch-lazy-highlight-face ((t (:inverse-video t :foreground ,gm-yellow))))
                          `(grep-context-face ((t (:foreground ,gm-fg))))
                          `(grep-error-face ((t (:foreground ,gm-red :weight bold :underline t))))
                          `(grep-hit-face ((t (:foreground ,gm-blue))))
                          `(grep-match-face ((t (:foreground ,gm-blue :weight bold))))
                          `(match ((t (:background ,gm-bg :foreground ,gm-blue :weight bold))))
                          `(completions-annotations ((t (:foreground ,gm-fg))))
                          `(completions-common-part ((t (:foreground ,gm-blue))))
                          `(completions-first-difference ((t (:foreground ,gm-fg))))
                          `(ido-first-match ((t (:foreground ,gm-blue :weight bold))))
                          `(ido-only-match ((t (:foreground ,gm-blue :weight bold))))
                          `(ido-subdir ((t (:foreground ,gm-yellow))))
                          `(ido-indicator ((t (:foreground ,gm-yellow :background ,gm-red))))
                           ;;;;; org-mode
                          `(org-agenda-date-today
                            ((t (:foreground ,gm-fg :slant italic :weight bold))) t)
                          `(org-agenda-structure
                            ((t (:inherit font-lock-fg0-face))))
                          `(org-archived ((t (:foreground ,gm-fg :weight bold))))
                          `(org-block ((t (:background ,gm-bg2 :foreground ,gm-fg :extend t))))
                          `(org-block-begin-line ((t (:foreground ,gm-fg0 :background ,gm-bg :extend t))))
                          `(org-code ((t (:foreground ,gm-yellow ))))
                          `(org-checkbox ((t (:background ,gm-bg :foreground ,gm-fg
                                                          :box (:line-width 1 :style released-button)))))
                          `(org-date ((t (:foreground ,gm-blue :underline t))))
                          `(org-deadline-announce ((t (:foreground ,gm-red))))
                          `(org-done ((t (:weight bold :weight bold :foreground ,gm-green))))
                          `(org-formula ((t (:foreground ,gm-yellow))))
                          `(org-headline-done ((t (:foreground ,gm-green))))
                          `(org-hide ((t (:background ,gm-bg :foreground ,gm-bg))))
                          `(org-verbatim ((t (:foreground ,gm-yellow))))
                          `(org-meta-line ((t (:foreground ,gm-fg0))))
                          `(org-indent ((t (:background ,gm-bg :foreground ,gm-bg))))
                          ;; `(org-level-1 ((t (:inherit ,z-variable-pitch :foreground ,gm-blue))))
                          ;; `(org-level-2 ((t (:inherit ,z-variable-pitch :foreground ,gm-green))))
                          ;; `(org-level-3 ((t (:inherit ,z-variable-pitch :foreground ,gm-purple))))
                          ;; `(org-level-4 ((t (:inherit ,z-variable-pitch :foreground ,gm-red))))
                          ;; `(org-level-5 ((t (:inherit ,z-variable-pitch :foreground ,gm-blue))))
                          ;; `(org-level-6 ((t (:inherit ,z-variable-pitch :foreground ,gm-green))))
                          ;; `(org-level-7 ((t (:inherit ,z-variable-pitch :foreground ,gm-purple))))
                          ;; `(org-level-8 ((t (:inherit ,z-variable-pitch :foreground ,gm-red))))
                          `(org-link ((t (:foreground ,gm-blue :underline t))))
                          `(org-scheduled ((t (:foreground ,gm-green))))
                          `(org-scheduled-previously ((t (:foreground ,gm-red))))
                          `(org-scheduled-today ((t (:foreground ,gm-blue))))
                          `(org-sexp-date ((t (:foreground ,gm-blue :underline t))))
                          `(org-special-keyword ((t (:inherit font-lock-fg0-face))))
                          `(org-table ((t (:foreground ,gm-blue))))
                          `(org-tag ((t (:weight bold :weight bold))))
                          `(org-time-grid ((t (:foreground ,gm-yellow))))
                          `(org-todo ((t (:weight bold :foreground ,gm-red :weight bold))))
                          `(org-upcoming-deadline ((t (:inherit font-lock-keyword-face))))
                          `(org-warning ((t (:weight bold :foreground ,gm-red :weight bold :underline nil))))
                          `(org-column ((t (:background ,gm-bg))))
                          `(org-column-title ((t (:background ,gm-bg :underline t :weight bold))))
                          `(org-mode-line-clock ((t (:foreground ,gm-fg :background ,gm-bg))))
                          `(org-mode-line-clock-overrun ((t (:foreground ,gm-bg :background ,gm-red))))
                          `(org-ellipsis ((t (:foreground ,gm-yellow :underline t))))
                          `(org-footnote ((t (:foreground ,gm-aqua :underline t))))
                          ;; `(org-document-title ((t (:inherit ,z-variable-pitch :foreground ,gm-blue
                          ;;                                    :weight bold
                          ;;                                    ,@(when gm-scale-org-headlines
                          ;;                                        (list :height gm-height-plus-4))))))
                          `(org-document-info ((t (:foreground ,gm-purple))))
                          `(org-document-info-keyword ((t (:foreground ,gm-fg0))))
                          `(org-habit-ready-face ((t :background ,gm-green)))
                          `(org-habit-alert-face ((t :background ,gm-yellow :foreground ,gm-bg)))
                          `(org-habit-clear-face ((t :background ,gm-blue)))
                          `(org-habit-overdue-face ((t :background ,gm-red)))
                          `(org-habit-clear-future-face ((t :background ,gm-blue)))
                          `(org-habit-ready-future-face ((t :background ,gm-green)))
                          `(org-habit-alert-future-face ((t :background ,gm-yellow :foreground ,gm-bg)))
                          `(org-habit-overdue-future-face ((t :background ,gm-red)))
                          ;;;;; org-ref
                          `(org-ref-ref-face ((t :underline t)))
                          `(org-ref-label-face ((t :underline t)))
                          `(org-ref-cite-face ((t :underline t)))
                          `(org-ref-glossary-face ((t :underline t)))
                          `(org-ref-acronym-face ((t :underline t)))
                          ;;;;; flycheck
                          `(flycheck-error
                            ((((supports :underline (:style wave)))
                              (:underline (:style wave :color ,gm-red) :inherit unspecified))
                             (t (:foreground ,gm-red :weight bold :underline t))))
                          `(flycheck-warning
                            ((((supports :underline (:style wave)))
                              (:underline (:style wave :color ,gm-yellow) :inherit unspecified))
                             (t (:foreground ,gm-yellow :weight bold :underline t))))
                          `(flycheck-info
                            ((((supports :underline (:style wave)))
                              (:underline (:style wave :color ,gm-aqua) :inherit unspecified))
                             (t (:foreground ,gm-aqua :weight bold :underline t))))
                          `(flycheck-fringe-error ((t (:foreground ,gm-red :weight bold))))
                          `(flycheck-fringe-warning ((t (:foreground ,gm-yellow :weight bold))))
                          `(flycheck-fringe-info ((t (:foreground ,gm-aqua :weight bold))))
                          ;;;;; company-mode
                          `(company-tooltip ((t (:foreground ,gm-fg :background ,gm-bg))))
                          `(company-tooltip-annotation ((t (:foreground ,gm-blue :background ,gm-bg))))
                          `(company-tooltip-annotation-selection ((t (:foreground ,gm-blue :background ,gm-bg))))
                          `(company-tooltip-selection ((t (:foreground ,gm-fg :background ,gm-bg4))))
                          `(company-tooltip-mouse ((t (:background ,gm-bg))))
                          `(company-tooltip-common ((t (:foreground ,gm-green))))
                          `(company-tooltip-common-selection ((t (:foreground ,gm-green))))
                          `(company-scrollbar-fg ((t (:background ,gm-bg))))
                          `(company-scrollbar-bg ((t (:background ,gm-bg))))
                          `(company-preview ((t (:background ,gm-green))))
                          `(company-preview-common ((t (:foreground ,gm-green :background ,gm-bg))))
                           ;;;;; term, ansi-term, vterm
                          `(term-color-bg ((t (:foreground ,gm-bg
                                                           :background , gm-bg))))
                          `(term-color-red ((t (:foreground ,gm-red
                                                            :background ,gm-red))))
                          `(term-color-green ((t (:foreground ,gm-green
                                                              :background ,gm-green))))
                          `(term-color-yellow ((t (:foreground ,gm-yellow
                                                               :background ,gm-yellow))))
                          `(term-color-blue ((t (:foreground ,gm-blue
                                                             :background ,gm-blue))))
                          `(term-color-purple ((t (:foreground ,gm-purple
                                                               :background ,gm-purple))))
                          `(term-color-aqua ((t (:foreground ,gm-aqua
                                                             :background ,gm-aqua))))
                          `(term-color-fg ((t (:foreground ,gm-fg
                                                           :background ,gm-fg))))
                          '(term-default-fg-color ((t (:inherit gm-fg))))
                          '(term-default-bg-color ((t (:inherit gm-bg))))
                          ;; diff-mode
                          `(diff-added ((t (:foreground ,gm-green :background: ,gm-bg :extend t))))
                          `(diff-changed ((t  (:foreground ,gm-yellow :background: ,gm-bg :extend t))))
                          `(diff-removed ((t (:foreground ,gm-red :background: ,gm-bg :extend t))))
                          `(diff-indicator-added ((t (:inherit diff-added))))
                          `(diff-indicator-changed ((t (:inherit diff-changed))))
                          `(diff-indicator-removed ((t (:inherit diff-removed))))
                          `(diff-refine-added   ((t (:background ,gm-green :foreground ,gm-bg))))
                          `(diff-refine-changed ((t (:background ,gm-yellow :foreground ,gm-bg))))
                          `(diff-refine-removed ((t (:background ,gm-red :foreground ,gm-bg))))
                          ;; `(diff-header ((,class (:background ,gm-bg))
                          ;; (t (:background ,gm-fg :foreground ,gm-bg))))
                          ;; `(diff-file-header
                          ;;   ((,class (:background ,gm-bg :foreground ,gm-fg :weight bold))
                          ;;    (t (:background ,gm-fg :foreground ,gm-bg :weight bold))))
                          ;;;;; diff-hl
                          ;; `(diff-hl-change ((,class (:inverse-video t :foreground ,gm-yellow :background ,gm-bg))))
                          ;; `(diff-hl-delete ((,class (:inverse-video t :foreground ,gm-red :background ,gm-bg))))
                          ;; `(diff-hl-insert ((,class (:inverse-video t :foreground ,gm-green :background ,gm-bg))))
                          ;; tab-bar
                          `(tab-bar ((t (:height 1.1 :foreground ,gm-fg :background ,gm-bg))))
                          `(tab-bar-tab ((t (:background ,gm-bg
                                                         :foreground ,gm-purple
                                                         :box (:line-width 1 :style released-button)))))
                          `(tab-bar-tab-inactive ((t (:inherit tab-bar-tab
                                                               :background ,gm-bg
                                                               :foreground ,gm-fg0))))

                          ;; tab-line
                          `(tab-line ((t (:foreground ,gm-fg :background ,gm-bg))))
                          `(tab-line-close-highlight ((t (:foreground ,gm-red))))
                          `(tab-line-tab ((t (:background ,gm-bg
                                                          :foreground ,gm-purple
                                                          :box (:line-width 1 :style released-button)))))
                          `(tab-line-tab-inactive ((t (:inherit tab-line-tab
                                                                :background ,gm-bg
                                                                :foreground ,gm-fg0))))
                          ;;;;; vertico
                          `(vertico-current ((t (:background ,gm-bg3 :foreground ,gm-yellow))))
                          `(vertico-multiline ((t (:foreground ,gm-green))))
                          `(vertico-group-title ((t (:foreground ,gm-green :weight bold))))
                          `(vertico-group-separator ((t (:foreground ,gm-green :weight bold))))
                          ;;;;; selectrum
                          `(selectrum-current-candidate ((t (:background ,gm-bg :foreground ,gm-yellow))))
                          `(selectrum-primary-highlight ((t (:background ,gm-green))))
                          `(selectrum-secondary-highlight ((t (:background ,gm-green))))
                          ;;;;; orderless
                          `(orderless-match-face-0 ((t (:foreground ,gm-green))))
                          `(orderless-match-face-1 ((t (:foreground ,gm-purple))))
                          `(orderless-match-face-2 ((t (:foreground ,gm-blue))))
                          `(orderless-match-face-3 ((t (:foreground ,gm-yellow))))
                          ;;;;; helpful
                          `(helpful-heading ((t (:foreground ,gm-green :height 1.2))))
                          ;;;;; rainbow-delimiters
                          `(rainbow-delimiters-depth-1-face ((t (:foreground ,gm-blue))))
                          `(rainbow-delimiters-depth-2-face ((t (:foreground ,gm-green))))
                          `(rainbow-delimiters-depth-3-face ((t (:foreground ,gm-purple))))
                          `(rainbow-delimiters-depth-4-face ((t (:foreground ,gm-yellow))))
                          `(rainbow-delimiters-depth-5-face ((t (:foreground ,gm-red))))
                          `(rainbow-delimiters-depth-6-face ((t (:foreground ,gm-aqua))))
                          `(rainbow-delimiters-depth-7-face ((t (:foreground ,gm-blue))))
                          `(rainbow-delimiters-depth-8-face ((t (:foreground ,gm-green))))
                          `(rainbow-delimiters-depth-9-face ((t (:foreground ,gm-purple))))
                          `(rainbow-delimiters-depth-10-face ((t (:foreground ,gm-yellow))))
                          `(rainbow-delimiters-depth-11-face ((t (:foreground ,gm-red))))
                          `(rainbow-delimiters-depth-12-face ((t (:foreground ,gm-aqua)))))
  )

;; (defmacro gm-define-theme (color-alist &rest body)
;;   (declare (indent 0))
;;   `(let ((class '((class color) (min-colors 89)))
;; 		 ,@(mapcar (lambda (cons)
;; 					 (list (intern (car cons)) (cdr cons)))
;; 				   (append gruvbox-material-hard-colors-alist)))
;; 	   ,@body))

;; (gm-define-theme gruvbox-material-hard-colors-alist
;;   (custom-theme-set-faces 'gruvbox-material-hard
;;                           '(button ((t (:underline t))))
;;                           `(default ((t (:background ,gm-bg :foreground ,gm-fg))))
;;                           `(cursor ((t (:background ,gm-fg :foreground ,gm-bg))))
;;                           `(link ((t (:underline t :foreground ,gm-blue))))
;;                           `(link-visited ((t (:underline t :foreground ,gm-blue))))
;;                           `(underline ((t (:underline t :foreground ,gm-yellow))))
;;                           `(font-lock-keyword-face ((t (:foreground ,gm-purple))))
;;                           `(font-lock-function-name-face ((t (:foreground ,gm-blue))))
;;                           `(font-lock-string-face ((t (:foreground ,gm-green))))
;;                           `(font-lock-warning-face ((t (:inverse-video t :background ,gm-bg :foreground ,gm-red))))
;;                           `(font-lock-type-face ((t (:weight bold :foreground ,gm-yellow))))
;;                           `(font-lock-preprocessor-face ((t (:foreground ,gm-blue))))
;;                           `(font-lock-builtin-face ((t (:weight bold :foreground ,gm-yellow))))
;;                           `(font-lock-variable-name-face ((t (:foreground ,gm-red))))
;;                           `(font-lock-constant-face ((t (:foreground ,gm-yellow))))
;;                           `(font-lock-doc-face ((t (:slant italic :foreground ,gm-fg0))))
;;                           `(font-lock-comment-face ((t (:slant italic :foreground ,gm-fg0))))
;;                           `(shadow ((t (:foreground ,gm-fg0))))
;;                           `(Info-quoted ((t (:inherit font-lock-constant-face))))
;;                           `(show-paren-match-face ((t (:inverse-video t :background ,gm-fg :foreground ,gm-red))))
;;                           `(highline-face ((t (:background ,gm-bg))))
;;                           `(ac-selection-face ((t (:background ,gm-purple :foreground ,gm-bg4))))
;;                           `(ac-candidate-face ((t (:background ,gm-bg :foreground ,gm-fg))))
;;                           `(flymake-errline
;;                             ((((supports :underline (:style wave)))
;;                               (:underline (:style wave :color ,gm-red)
;;                                           :inherit unspecified :foreground unspecified :background unspecified))
;;                              (t (:foreground ,gm-red :weight bold :underline t))))
;;                           `(flymake-warnline
;;                             ((((supports :underline (:style wave)))
;;                               (:underline (:style wave :color ,gm-yellow)
;;                                           :inherit unspecified :foreground unspecified :background unspecified))
;;                              (t (:foreground ,gm-yellow :weight bold :underline t))))
;;                           `(flymake-infoline
;;                             ((((supports :underline (:style wave)))
;;                               (:underline (:style wave :color ,gm-green)
;;                                           :inherit unspecified :foreground unspecified :background unspecified))
;;                              (t (:foreground ,gm-green :weight bold :underline t))))
;;                           `(flyspell-duplicate
;;                             ((((supports :underline (:style wave)))
;;                               (:underline (:style wave :color ,gm-yellow) :inherit unspecified))
;;                              (t (:foreground ,gm-yellow :weight bold :underline t))))
;;                           `(flyspell-incorrect
;;                             ((((supports :underline (:style wave)))
;;                               (:underline (:style wave :color ,gm-red) :inherit unspecified))
;;                              (t (:foreground ,gm-red :weight bold :underline t))))
;;                           `(minibuffer-prompt ((t (:foreground ,gm-yellow))))
;;                           `(menu ((t (:foreground ,gm-fg :background ,gm-bg))))
;;                           `(highlight ((t (:background ,gm-bg4))))
;;                           `(hl-line-face ((,class (:background ,gm-bg4))
;;                                           (t :weight bold)))
;;                           `(hl-line ((,class (:background ,gm-bg4 :extend t))
;;                                      (t :weight bold)))
;;                           `(success ((t (:foreground ,gm-green :weight bold))))
;;                           `(warning ((t (:foreground ,gm-yellow :weight bold))))
;;                           `(error ((t  (:foreground ,gm-red))))
;;                           `(tooltip ((t (:foreground ,gm-fg :background ,gm-bg))))
;;                           `(region ((t (:inverse-video t :background ,gm-bg))))
;;                           `(secondary-selection ((t (:background ,gm-bg))))
;;                           `(trailing-fgspace ((t (:background ,gm-red))))
;;                           `(border ((t (:background ,gm-bg :foreground ,gm-fg))))
;;                           `(vertical-border ((t (:foreground ,gm-bg))))
;;                           `(mode-line ((t (:foreground ,gm-fg0 :background ,gm-bg :weight normal
;;                                                        :box (:line-width 1 :color ,gm-bg)))))
;;                           `(mode-line-inactive ((t (:foreground ,gm-fg0 :background ,gm-bg :weight normal :box (:line-width 1 :color ,gm-bg)))))
;;                           `(mode-line-buffer-id ((t (:weight bold :background ,gm-bg :foreground ,gm-fg))))
;;                           `(mode-line-emphasis ((t (:foreground ,gm-fg :slant italic))))
;;                           `(mode-line-highlight ((t (:foreground ,gm-purple :box nil :weight bold))))
;;                           `(fringe ((t (:underline t :background ,gm-bg :foreground ,gm-bg4))))
;;                           `(fill-column-indicator ((,class :foreground ,gm-bg4 :weight semilight)))
;;                           `(linum ((t (:background ,gm-bg :foreground ,gm-fg))))
;;                           `(line-number ((t (:foreground gm-fg
;;                                                              (list :background gm-bg)))))
;;                           `(line-number-current-line ((t (:inherit line-number :foreground gm-fg
;;                                                                        (list :background gm-bg4)))))
;;                           `(header-line ((t (:foreground ,gm-yellow
;;                                                          :background ,gm-bg
;;                                                          :box (:line-width -1 :style released-button)
;;                                                          :extend t))))
;;                           `(widget-field ((t (:foreground ,gm-fg :background ,gm-bg))))
;;                           `(widget-button ((t (:underline t))))
;;                           `(escape-glyph ((t (:foreground ,gm-yellow :weight bold))))
;;                           `(dired-directory ((t (:weight bold :foreground ,gm-blue))))
;;                           `(lazy-highlight ((t (:foreground ,gm-blue :background ,gm-bg :inverse-video t))))
;;                           `(isearch ((t (:inverse-video t :background ,gm-bg4 :foreground ,gm-blue))))
;;                           `(isearch-fail ((t (:background ,gm-bg :inherit font-lock-warning-face :inverse-video t))))
;;                           `(isearch-lazy-highlight-face ((t (:inverse-video t :foreground ,gm-yellow))))
;;                           `(grep-context-face ((t (:foreground ,gm-fg))))
;;                           `(grep-error-face ((t (:foreground ,gm-red :weight bold :underline t))))
;;                           `(grep-hit-face ((t (:foreground ,gm-blue))))
;;                           `(grep-match-face ((t (:foreground ,gm-blue :weight bold))))
;;                           `(match ((t (:background ,gm-bg :foreground ,gm-blue :weight bold))))
;;                           `(completions-annotations ((t (:foreground ,gm-fg))))
;;                           `(completions-common-part ((t (:foreground ,gm-blue))))
;;                           `(completions-first-difference ((t (:foreground ,gm-fg))))
;;                           `(ido-first-match ((t (:foreground ,gm-blue :weight bold))))
;;                           `(ido-only-match ((t (:foreground ,gm-blue :weight bold))))
;;                           `(ido-subdir ((t (:foreground ,gm-yellow))))
;;                           `(ido-indicator ((t (:foreground ,gm-yellow :background ,gm-red))))
;;                            ;;;;; org-mode
;;                           `(org-agenda-date-today
;;                             ((t (:foreground ,gm-fg :slant italic :weight bold))) t)
;;                           `(org-agenda-structure
;;                             ((t (:inherit font-lock-fg0-face))))
;;                           `(org-archived ((t (:foreground ,gm-fg :weight bold))))
;;                           `(org-block ((t (:background ,gm-bg :foreground ,gm-fg :extend t))))
;;                           `(org-block-begin-line ((t (:foreground ,gm-fg0 :background ,gm-bg :extend t))))
;;                           `(org-code ((t (:foreground ,gm-yellow ))))
;;                           `(org-checkbox ((t (:background ,gm-bg :foreground ,gm-fg
;;                                                           :box (:line-width 1 :style released-button)))))
;;                           `(org-date ((t (:foreground ,gm-blue :underline t))))
;;                           `(org-deadline-announce ((t (:foreground ,gm-red))))
;;                           `(org-done ((t (:weight bold :weight bold :foreground ,gm-green))))
;;                           `(org-formula ((t (:foreground ,gm-yellow))))
;;                           `(org-headline-done ((t (:foreground ,gm-green))))
;;                           `(org-hide ((t (:background ,gm-bg :foreground ,gm-bg))))
;;                           `(org-verbatim ((t (:foreground ,gm-yellow))))
;;                           `(org-meta-line ((t (:foreground ,gm-fg0))))
;;                           `(org-indent ((t (:background ,gm-bg :foreground ,gm-bg))))
;;                           ;; `(org-level-1 ((t (:inherit ,z-variable-pitch :foreground ,gm-blue))))
;;                           ;; `(org-level-2 ((t (:inherit ,z-variable-pitch :foreground ,gm-green))))
;;                           ;; `(org-level-3 ((t (:inherit ,z-variable-pitch :foreground ,gm-purple))))
;;                           ;; `(org-level-4 ((t (:inherit ,z-variable-pitch :foreground ,gm-red))))
;;                           ;; `(org-level-5 ((t (:inherit ,z-variable-pitch :foreground ,gm-blue))))
;;                           ;; `(org-level-6 ((t (:inherit ,z-variable-pitch :foreground ,gm-green))))
;;                           ;; `(org-level-7 ((t (:inherit ,z-variable-pitch :foreground ,gm-purple))))
;;                           ;; `(org-level-8 ((t (:inherit ,z-variable-pitch :foreground ,gm-red))))
;;                           `(org-link ((t (:foreground ,gm-blue :underline t))))
;;                           `(org-scheduled ((t (:foreground ,gm-green))))
;;                           `(org-scheduled-previously ((t (:foreground ,gm-red))))
;;                           `(org-scheduled-today ((t (:foreground ,gm-blue))))
;;                           `(org-sexp-date ((t (:foreground ,gm-blue :underline t))))
;;                           `(org-special-keyword ((t (:inherit font-lock-fg0-face))))
;;                           `(org-table ((t (:foreground ,gm-blue))))
;;                           `(org-tag ((t (:weight bold :weight bold))))
;;                           `(org-time-grid ((t (:foreground ,gm-yellow))))
;;                           `(org-todo ((t (:weight bold :foreground ,gm-red :weight bold))))
;;                           `(org-upcoming-deadline ((t (:inherit font-lock-keyword-face))))
;;                           `(org-warning ((t (:weight bold :foreground ,gm-red :weight bold :underline nil))))
;;                           `(org-column ((t (:background ,gm-bg))))
;;                           `(org-column-title ((t (:background ,gm-bg :underline t :weight bold))))
;;                           `(org-mode-line-clock ((t (:foreground ,gm-fg :background ,gm-bg))))
;;                           `(org-mode-line-clock-overrun ((t (:foreground ,gm-bg :background ,gm-red))))
;;                           `(org-ellipsis ((t (:foreground ,gm-yellow :underline t))))
;;                           `(org-footnote ((t (:foreground ,gm-aqua :underline t))))
;;                           ;; `(org-document-title ((t (:inherit ,z-variable-pitch :foreground ,gm-blue
;;                           ;;                                    :weight bold
;;                           ;;                                    ,@(when gm-scale-org-headlines
;;                           ;;                                        (list :height gm-height-plus-4))))))
;;                           `(org-document-info ((t (:foreground ,gm-purple))))
;;                           `(org-document-info-keyword ((t (:foreground ,gm-fg0))))
;;                           `(org-habit-ready-face ((t :background ,gm-green)))
;;                           `(org-habit-alert-face ((t :background ,gm-yellow :foreground ,gm-bg)))
;;                           `(org-habit-clear-face ((t :background ,gm-blue)))
;;                           `(org-habit-overdue-face ((t :background ,gm-red)))
;;                           `(org-habit-clear-future-face ((t :background ,gm-blue)))
;;                           `(org-habit-ready-future-face ((t :background ,gm-green)))
;;                           `(org-habit-alert-future-face ((t :background ,gm-yellow :foreground ,gm-bg)))
;;                           `(org-habit-overdue-future-face ((t :background ,gm-red)))
;;                           ;;;;; org-ref
;;                           `(org-ref-ref-face ((t :underline t)))
;;                           `(org-ref-label-face ((t :underline t)))
;;                           `(org-ref-cite-face ((t :underline t)))
;;                           `(org-ref-glossary-face ((t :underline t)))
;;                           `(org-ref-acronym-face ((t :underline t)))
;;                           ;;;;; flycheck
;;                           `(flycheck-error
;;                             ((((supports :underline (:style wave)))
;;                               (:underline (:style wave :color ,gm-red) :inherit unspecified))
;;                              (t (:foreground ,gm-red :weight bold :underline t))))
;;                           `(flycheck-warning
;;                             ((((supports :underline (:style wave)))
;;                               (:underline (:style wave :color ,gm-yellow) :inherit unspecified))
;;                              (t (:foreground ,gm-yellow :weight bold :underline t))))
;;                           `(flycheck-info
;;                             ((((supports :underline (:style wave)))
;;                               (:underline (:style wave :color ,gm-aqua) :inherit unspecified))
;;                              (t (:foreground ,gm-aqua :weight bold :underline t))))
;;                           `(flycheck-fringe-error ((t (:foreground ,gm-red :weight bold))))
;;                           `(flycheck-fringe-warning ((t (:foreground ,gm-yellow :weight bold))))
;;                           `(flycheck-fringe-info ((t (:foreground ,gm-aqua :weight bold))))
;;                           ;;;;; company-mode
;;                           `(company-tooltip ((t (:foreground ,gm-fg :background ,gm-bg))))
;;                           `(company-tooltip-annotation ((t (:foreground ,gm-blue :background ,gm-bg))))
;;                           `(company-tooltip-annotation-selection ((t (:foreground ,gm-blue :background ,gm-bg))))
;;                           `(company-tooltip-selection ((t (:foreground ,gm-fg :background ,gm-bg4))))
;;                           `(company-tooltip-mouse ((t (:background ,gm-bg))))
;;                           `(company-tooltip-common ((t (:foreground ,gm-green))))
;;                           `(company-tooltip-common-selection ((t (:foreground ,gm-green))))
;;                           `(company-scrollbar-fg ((t (:background ,gm-bg))))
;;                           `(company-scrollbar-bg ((t (:background ,gm-bg))))
;;                           `(company-preview ((t (:background ,gm-green))))
;;                           `(company-preview-common ((t (:foreground ,gm-green :background ,gm-bg))))
;;                            ;;;;; term, ansi-term, vterm
;;                           `(term-color-bg ((t (:foreground ,gm-bg
;;                                                               :background , gm-bg))))
;;                           `(term-color-red ((t (:foreground ,gm-red
;;                                                             :background ,gm-red))))
;;                           `(term-color-green ((t (:foreground ,gm-green
;;                                                               :background ,gm-green))))
;;                           `(term-color-yellow ((t (:foreground ,gm-yellow
;;                                                                :background ,gm-yellow))))
;;                           `(term-color-blue ((t (:foreground ,gm-blue
;;                                                              :background ,gm-blue))))
;;                           `(term-color-purple ((t (:foreground ,gm-purple
;;                                                                 :background ,gm-purple))))
;;                           `(term-color-aqua ((t (:foreground ,gm-aqua
;;                                                              :background ,gm-aqua))))
;;                           `(term-color-fg ((t (:foreground ,gm-fg
;;                                                               :background ,gm-fg))))
;;                           '(term-default-fg-color ((t (:inherit gm-fg))))
;;                           '(term-default-bg-color ((t (:inherit gm-bg))))
;;                           ;; diff-mode
;;                           `(diff-added ((t (:foreground ,gm-green :background: ,gm-bg :extend t))))
;;                           `(diff-changed ((t  (:foreground ,gm-yellow :background: ,gm-bg :extend t))))
;;                           `(diff-removed ((t (:foreground ,gm-red :background: ,gm-bg :extend t))))
;;                           `(diff-indicator-added ((t (:inherit diff-added))))
;;                           `(diff-indicator-changed ((t (:inherit diff-changed))))
;;                           `(diff-indicator-removed ((t (:inherit diff-removed))))
;;                           `(diff-refine-added   ((t (:background ,gm-green :foreground ,gm-bg))))
;;                           `(diff-refine-changed ((t (:background ,gm-yellow :foreground ,gm-bg))))
;;                           `(diff-refine-removed ((t (:background ,gm-red :foreground ,gm-bg))))
;;                           `(diff-header ((,class (:background ,gm-bg))
;;                                          (t (:background ,gm-fg :foreground ,gm-bg))))
;;                           `(diff-file-header
;;                             ((,class (:background ,gm-bg :foreground ,gm-fg :weight bold))
;;                              (t (:background ,gm-fg :foreground ,gm-bg :weight bold))))
;;                           ;;;;; diff-hl
;;                           `(diff-hl-change ((,class (:inverse-video t :foreground ,gm-yellow :background ,gm-bg))))
;;                           `(diff-hl-delete ((,class (:inverse-video t :foreground ,gm-red :background ,gm-bg))))
;;                           `(diff-hl-insert ((,class (:inverse-video t :foreground ,gm-green :background ,gm-bg))))
;;                           ;; tab-bar
;;                           `(tab-bar ((t (:height 1.1 :foreground ,gm-fg :background ,gm-bg))))
;;                           `(tab-bar-tab ((t (:background ,gm-bg
;;                                                          :foreground ,gm-purple
;;                                                          :box (:line-width 1 :style released-button)))))
;;                           `(tab-bar-tab-inactive ((t (:inherit tab-bar-tab
;;                                                                :background ,gm-bg
;;                                                                :foreground ,gm-fg0))))

;;                           ;; tab-line
;;                           `(tab-line ((t (:foreground ,gm-fg :background ,gm-bg))))
;;                           `(tab-line-close-highlight ((t (:foreground ,gm-red))))
;;                           `(tab-line-tab ((t (:background ,gm-bg
;;                                                           :foreground ,gm-purple
;;                                                           :box (:line-width 1 :style released-button)))))
;;                           `(tab-line-tab-inactive ((t (:inherit tab-line-tab
;;                                                                 :background ,gm-bg
;;                                                                 :foreground ,gm-fg0))))
;;                           ;;;;; vertico
;;                           `(vertico-current ((t (:background ,gm-bg :foreground ,gm-yellow :weight bold))))
;;                           `(vertico-multiline ((t (:foreground ,gm-green :weight bold))))
;;                           `(vertico-group-title ((t (:foreground ,gm-green :weight bold))))
;;                           `(vertico-group-separator ((t (:foreground ,gm-green :weight bold))))
;;                           ;;;;; selectrum
;;                           `(selectrum-current-candidate ((t (:background ,gm-bg :foreground ,gm-yellow :weight bold))))
;;                           `(selectrum-primary-highlight ((t (:background ,gm-green))))
;;                           `(selectrum-secondary-highlight ((t (:background ,gm-green))))
;;                           ;;;;; orderless
;;                           `(orderless-match-face-0 ((t (:foreground ,gm-green))))
;;                           `(orderless-match-face-1 ((t (:foreground ,gm-purple))))
;;                           `(orderless-match-face-2 ((t (:foreground ,gm-blue))))
;;                           `(orderless-match-face-3 ((t (:foreground ,gm-yellow))))
;;                           ;;;;; helpful
;;                           `(helpful-heading ((t (:foreground ,gm-green :height 1.2))))
;;                           ;;;;; rainbow-delimiters
;;                           `(rainbow-delimiters-depth-1-face ((t (:foreground ,gm-blue))))
;;                           `(rainbow-delimiters-depth-2-face ((t (:foreground ,gm-green))))
;;                           `(rainbow-delimiters-depth-3-face ((t (:foreground ,gm-purple))))
;;                           `(rainbow-delimiters-depth-4-face ((t (:foreground ,gm-yellow))))
;;                           `(rainbow-delimiters-depth-5-face ((t (:foreground ,gm-red))))
;;                           `(rainbow-delimiters-depth-6-face ((t (:foreground ,gm-aqua))))
;;                           `(rainbow-delimiters-depth-7-face ((t (:foreground ,gm-blue))))
;;                           `(rainbow-delimiters-depth-8-face ((t (:foreground ,gm-green))))
;;                           `(rainbow-delimiters-depth-9-face ((t (:foreground ,gm-purple))))
;;                           `(rainbow-delimiters-depth-10-face ((t (:foreground ,gm-yellow))))
;;                           `(rainbow-delimiters-depth-11-face ((t (:foreground ,gm-red))))
;;                           `(rainbow-delimiters-depth-12-face ((t (:foreground ,gm-aqua))))))

;;;###autoload
(and load-file-name
     (boundp 'custom-theme-load-path)
     (add-to-list 'custom-theme-load-path
                  (file-name-as-directory
                   (file-name-directory load-file-name))))

(provide-theme 'gruvbox-material-hard)

(provide 'gruvbox-material-hard-theme)

